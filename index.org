#+SETUPFILE: theme-readtheorg.setup
* Introduction
What follows is a small compilation of just some exploratory analysis I've done. 

Let me know if you'd like anything to be published, right now all I'm doing is separating out the data. One thing I'd like to make note of eventually is the correlation between features of the house. It's clear that having a porch or a 2nd floor effects the price positively, but I'm sure there is some correlation between the two. 

There probably exists some degree of correlation between all the features of the house. It's just a matter of what are the ones that affect pricing the most. I don't really know how to structure the analysis, something I'd welcome feedback on. As for now, I'm just going to get basic info.

* Questions:
In what ways does the data affect pricing?
Are there any correlations between the variables themselves?
Distributions of each variable irrespective of their affiliations
Outliers?
** Slide format

So LaTeX has a presentation mode, which the professor uses. There are a lot of themes, but the default theme is probably the best looking.

Using the Beamer class, pittsburg theme or bust (aka default theme)
** Some tooling for the data
*** Presumptions
All the code blocks after this section assume the following:
#+BEGIN_SRC
dat = read.csv("BHD.csv")
#+END_SRC

I have dplyr installed to allow for SQL-like manipulations and selections, so I'll be using it.
#+BEGIN_SRC 
install.package("dplyr")
#+END_SRC

(Installing packages usually takes a while)

*** Some useful language constructs
Data frame indexing. Let's say you want to get only the apartments in Mitchel. It's quite simple to get this:
#+BEGIN_SRC
dat[dat$Neighborhood == "Mitchel",]
#+END_SRC

The last comma is necessary, it is used to get the columns. In fact, you can use this to immediately get the data for a specific neighborhood, but this is a little tedious as you have to refer to the column names by numbers (ie SalePrice is column 1, WoodDeckSF is column 4, etc.)

#+BEGIN_SRC
mean(dat[dat$Neighborhood == "Mitchel", 1]) # 156,270
#+END_SRC

Multi parameter data frame indexing:

#+BEGIN_SRC 
# get OpenPorchSF between quartiles
quart = c(0, 0.25, 0.5, 0.75, 1)
results = quantile(dat$OpenPorchSF, probs = quart)

low = dat[dat$OpenPorchSF <= results[[1]],]
mediocre = dat[dat$OpenPorchSF <= results[[2]],]
good = dat[dat$OpenPorchSF <= results[[3]],]
great = dat[dat$OpenPorchSF <= results[[4]],]

#+END_SRC

#+BEGIN_SRC 
# get WoodDeckSF between quartiles
quart = c(0, 0.25, 0.5, 0.75, 1)
results = quantile(dat$WoodDeckSF, probs = quart)

low = dat[dat$WoodDeckSF <= results[[1]],]
mediocre = dat[dat$WoodDeckSF <= results[[2]],]
good = dat[dat$WoodDeckSF <= results[[3]],]
great = dat[dat$WoodDeckSF <= results[[4]],]


#+END_SRC
There are ways to perform analyses on slices of the data. For example, let's say I want to only analyze trends in a specific neighborhood. You can manually slice these each time, but that is very time intensive. Here is a function that takes a dataset (in this case, our BHD dat table), a label (like SalePrice, OpenPorchSF), and shows you the Cullen-Frey graph of the distribution of the attribute (it only works on integers).

#+BEGIN_SRC 
library(fitdistrplus) # we need descdist() from this package

descatt <- function (dataset, attribute) {
    descdist(getElement(dataset, attribute))
}

# Usage

descatt(dat, "SalePrice")

# summary statistics
# ------
# min:  34900   max:  755000 
# median:  163000 
# mean:  180921.2 
# estimated sd:  79442.5 
# estimated skewness:  1.882876 
# estimated kurtosis:  9.536282 

#+END_SRC

It is trivial to extend this. Here is an example I use to generate the below charts quickly:

#+BEGIN_SRC R
  saveDescAttToImg <- function (dataset, attribute, imgName=NULL) {
      if(is.null(imgName)) {
          imgName = paste("img/descdist", attribute, ".png" sep="")
      }
      png(imgName)
      descatt(dataset, attribute)
      dev.off()
  }
#+END_SRC
*** Functions
Try as I might, I could not find a built-in function that separated data by an arbitrary constraint. So I'll resort to using dplyr's filter.

Categorical variable mapping (mostly for neighborhood analysis)
#+BEGIN_SRC R
   catvarmap <- function(dataset, filter, attribute, somefunc) {
       for(level in levels(getElement(dataset, filter))) {
           print(
               cat(level, 
                   somefunc(
                       getElement(
                           filter(dataset, getElement(dataset, filter) == level),
                           attribute)
                   ),
                   "\n", sep = "\t")
           )
       }
   }
#+END_SRC


** Rooms
SalePrice is definitely affected by presence of specific features of the house. Not sure whether the influence is categorical.

*** Basement

**** Categorical data
#+BEGIN_SRC 
hasbasement = dat[dat$BsmtSF != 0,] # has a basement 
nobasement = dat[dat$BsmtSF == 0,] # doesn't have a basement

nrow(dat) == nrow(hasbasement) + nrow(nobasement) # TRUE

mean(hasbasement$SalePrice) - mean(nobasement$SalePrice) # 22,645

#+END_SRC

**** Distribution parameters
Uh... the cullen and Frey graph does not show anything that is coherent. Possibilities include trimming the exteriors.
#+BEGIN_SRC 
hasbasement = dat[dat$BsmtSF != 0,] # has a basement

descdist(hasbasement$BsmtSF)

# summary statistics
# ------
# min:  2   max:  5644 
# median:  604 
# mean:  652.28 
# estimated sd:  411.9803 
# estimated skewness:  2.302275 
# estimated kurtosis:  24.32368 

#+END_SRC

[[./img/descdistBasementSF.png][The descdist produces this image]].
**** Categorical data
#+BEGIN_SRC 
hasDeck = dat[dat$WoodDeckSF != 0,] # has a wood deck
noDeck = dat[dat$WoodDeckSF == 0,] # doesn't have a wood deck

nrow(dat) == nrow(hasDeck) + nrow(noDeck) # TRUE

mean(hasDeck$SalePrice) - mean(noDeck$SalePrice) # 47,320

#+END_SRC

**** Distribution parameters


#+BEGIN_SRC 
hasDeck = dat[dat$WoodDeckSF != 0,] # has a wood deck

descdist(hasDeck$WoodDeckSF)

# summary statistics
# ------
# min:  12   max:  857 
# median:  171 
# mean:  196.8484 
# estimated sd:  112.2997 
# estimated skewness:  1.617617 
# estimated kurtosis:  7.286244 

#+END_SRC

[[./img/descdistWoodDeckSF.png][The descdist produces this image]]. This looks a lot more promising than the previous image, which does not resemble anything comprehensible.
*** 2nd Floor
**** Categorical data
#+BEGIN_SRC 
has2ndFlr = dat[dat$X2ndFlrSF != 0,] # has a 2nd floor
no2ndFlr = dat[dat$X2ndFlrSF == 0,] # doesn't have a 2nd floor

nrow(dat) == nrow(has2ndFlr) + nrow(no2ndFlr) # TRUE

mean(has2ndFlr$SalePrice) - mean(no2ndFlr$SalePrice) # 22,067

#+END_SRC

*** Open Porch
**** Categorical data
#+BEGIN_SRC 
hasOpenPorch = dat[dat$OpenPorchSF != 0,] # has an open porch
noOpenPorch = dat[dat$OpenPorchSF == 0,] # doesn't have an open porch

nrow(dat) == nrow(hasOpenPorch) + nrow(noOpenPorch) # TRUE

mean(hasOpenPorch$SalePrice) - mean(noOpenPorch$SalePrice) # 65930

#+END_SRC

**** Distribution Parameters
It matches the CDF reasonably well, but the upper half does not follow the QQ plot at all. Possibly bimodal distribution?


#+BEGIN_SRC 
hasOpenPorch = dat[dat$OpenPorchSF != 0,] # has an open porch

descdist(dat$OpenPorchSF)

# summary statistics
# ------
# min:  4   max:  547 
# median:  63 
# mean:  84.73134 
# estimated sd:  68.89317 
# estimated skewness:  2.24855 
# estimated kurtosis:  10.80962 

fit.gamma

# Fitting of the distribution ' gamma ' by maximum likelihood 
# Parameters:
#         estimate  Std. Error
# shape 2.02408873 0.093442109
# rate  0.02389128 0.001248555


#+END_SRC

*** Street Access
**** Categorical data
There are only 6 houses in the entire set that have gravel driveways. All but one were constructed before 1965.
#+BEGIN_SRC 
pavedRoad = dat[dat$Street == "Pave",] # has a pavement driveway
gravelRoad = dat[dat$Street == "Grvl",] # has a gravel driveway

nrow(dat) == nrow(pavedRoad) + nrow(gravelRoad) # TRUE

mean(pavedRoad$SalePrice) - mean(gravelRoad$SalePrice) # 50940

#+END_SRC

* Analysis
** Distribution of neighborhoods

#+BEGIN_SRC
as.data.frame(table(dat$Neighborhood)) # gets count of neighborhoods

catvarmap(dat, "Neighborhood", "SalePrice", mean) # gets avg price of each neighborhood.

#+END_SRC

yields (formatted for easier reading):
| Neighborhood | Count | mean(SalePrice) |
|--------------+-------+-----------------|
| NAmes        |   225 |        145847.1 |
| CollgCr      |   150 |        197965.8 |
| OldTown      |   113 |        128225.3 |
| Edwards      |   100 |        128219.7 |
| Somerst      |    86 |        225379.8 |
| Gilbert      |    79 |        192854.5 |
| NridgHt      |    77 |        316270.6 |
| Sawyer       |    74 |        136793.1 |
| NWAmes       |    73 |        189050.1 |
| SawyerW      |    59 |        186555.8 |
| BrkSide      |    58 |        124834.1 |
| Crawfor      |    51 |        210624.7 |
| Mitchel      |    49 |        156270.1 |
| NoRidge      |    41 |        335295.3 |
| Timber       |    38 |        242247.4 |
| IDOTRR       |    37 |        100123.8 |
| ClearCr      |    28 |        212565.4 |
| StoneBr      |    25 |          310499 |
| SWISU        |    25 |        142591.4 |
| Blmngtn      |    17 |        194870.9 |
| MeadowV      |    17 |        98576.47 |
| BrDale       |    16 |        104493.8 |
| Veenker      |    11 |        238772.7 |
| NPkVill      |     9 |        142694.4 |
| Blueste      |     2 |          137500 |
** OpenPorchSF


